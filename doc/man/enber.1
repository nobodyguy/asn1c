.\" Automatically generated by Pandoc 2.14.0.3
.\"
.ad l
.TH "enber" "1" "2016-01-23" "unber(1) counterpart" "Version 0.9.29"
.nh
.SH NAME
.PP
enber \[en] Convert the unber XML output back into BER
.SH SYNOPSIS
.PP
enber [\f[B]-n\f[R]] [\f[B]-\f[R]] [\f[I]input-filenames\f[R]\&...]
.SH DESCRIPTION
.PP
enber converts the XML-formatted files produced by \f[C]unber\f[R](1)
back into the BER format.
A single dash denotes the standard input.
.SH OPTIONS
.TP
-n
Disable input validation.
By default, enber performs some basic validity checks against XML input.
.SH EXAMPLES
.PP
Decode a BER sequence and immediately encode it back
.RS
.PP
unber \f[B]-p\f[R] \f[I]filename.ber\f[R] | enber \f[B]-\f[R] >
\f[I]reconstructed.ber\f[R]
.RE
.SH FOOTNOTES
.PP
This program does not attempt to perform full-fledged XML parsing.
It is merely compatible with \f[C]unber\f[R](1)\[cq]s output.
In particular, the XML style comments are not supported.
A hash \[lq]\f[B]#\f[R]\[rq] or two dashes \[lq]\f[B]\[en]\f[R]\[rq]
following a whitespace is treated as a beginning of a comment line,
which is ignored completely.
Empty lines are ignored as well.
.PP
The following example \f[C]enber\f[R](1) input demonstrates the use of
comments:
.PP
<C O=\[lq]0\[rq] T=\[lq][1]\[rq] TL=\[lq]2\[rq] V=\[lq]2\[rq]>
.PD 0
.P
.PD
\ \ \ \ <I O=\[lq]2\[rq] T=\[lq][1]\[rq] TL=\[lq]2\[rq]
V=\[lq]Indefinite\[rq]>
.PD 0
.P
.PD
\ \ \ \ \f[B]\[en]\f[R] </I O=\[lq]4\[rq] T=\[lq][UNIVERSAL 0]\[rq]
L=\[lq]4\[rq]>
.PD 0
.P
.PD
\ \ \ \ \f[B]#\f[R] Do not terminate:
.PD 0
.P
.PD
\ \ \ \ \f[B]#\f[R] the absence of end-of-content octets is intentional!
.PD 0
.P
.PD
</C O=\[lq]6\[rq] T=\[lq][1]\[rq] L=\[lq]6\[rq]>
.SH SEE ALSO
.PP
\f[C]unber\f[R](1), \f[C]asn1c\f[R](1).
.SH AUTHORS
Lev Walkin <vlm@lionet.info>.
